<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.entity.Customer" >
    <id column="customer_id" property="customerId" jdbcType="SMALLINT" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="TINYINT" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address_id" property="addressId" jdbcType="SMALLINT" />
    <result column="active" property="active" jdbcType="TINYINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="last_update" property="lastUpdate" jdbcType="TIMESTAMP" />
    <association property="address" javaType="com.entity.Address">
      <id column="address_Id" property="addressId" jdbcType="SMALLINT"/>
      <result column="address" property="address" jdbcType="VARCHAR"/>
      <result column="address2" property="address2" jdbcType="VARCHAR"/>
      <result column="district" property="district" jdbcType="VARCHAR"/>
      <result column="city_id" property="cityId" jdbcType="SMALLINT"/>
      <result column="postal_code" property="postalCode" jdbcType="VARCHAR"/>
      <result column="phone" property="phone" jdbcType="VARCHAR"/>
      <result column="last_update" property="lastUpdate" jdbcType="TIMESTAMP"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    customer_id, first_name, password, store_id, last_name, email, address_id, active, 
    create_date, last_update
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.entity.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where customer_id = #{customerId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from customer
    where customer_id = #{customerId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.CustomerExample" >
    delete from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.Customer" >
    insert into customer (customer_id, first_name, password, 
      store_id, last_name, email, 
      address_id, active, create_date, 
      last_update)
    values (#{customerId,jdbcType=SMALLINT}, #{firstName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{storeId,jdbcType=TINYINT}, #{lastName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{addressId,jdbcType=SMALLINT}, #{active,jdbcType=TINYINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{lastUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="firstName != null" >
        first_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="lastName != null" >
        last_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="active != null" >
        active,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="lastUpdate != null" >
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="firstName != null" >
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=TINYINT},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=SMALLINT},
      </if>
      <if test="active != null" >
        #{active,jdbcType=TINYINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null" >
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=SMALLINT},
      </if>
      <if test="record.firstName != null" >
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=TINYINT},
      </if>
      <if test="record.lastName != null" >
        last_name = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=SMALLINT},
      </if>
      <if test="record.active != null" >
        active = #{record.active,jdbcType=TINYINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdate != null" >
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set customer_id = #{record.customerId,jdbcType=SMALLINT},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=TINYINT},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=SMALLINT},
      active = #{record.active,jdbcType=TINYINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Customer" >
    update customer
    <set >
      <if test="firstName != null" >
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=TINYINT},
      </if>
      <if test="lastName != null" >
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=SMALLINT},
      </if>
      <if test="active != null" >
        active = #{active,jdbcType=TINYINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null" >
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Customer" >
    update customer
    set first_name = #{firstName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=TINYINT},
      last_name = #{lastName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=SMALLINT},
      active = #{active,jdbcType=TINYINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where customer_id = #{customerId,jdbcType=SMALLINT}
  </update>

  <select id="getAllCus" parameterType="com.entity.CustomerExample" resultMap="BaseResultMap">
      select c.*,a.address from customer c left join address a on c.address_id=a.address_id order by customer_id asc
  </select>
</mapper>